make web
emcc -Wall -Wno-unused-function -std=c++17 -I../Empirical/source/ -Oz -DNDEBUG -s "EXTRA_EXPORTED_RUNTIME_METHODS=['ccall', 'cwrap']" -s TOTAL_MEMORY=67108864 --js-library ../Empirical/source/web/library_emp.js -s EXPORTED_FUNCTIONS="['_main', '_empCppCallback']" -s DISABLE_EXCEPTION_CATCHING=1 -s NO_EXIT_RUNTIME=1  source/web/symbulation-web.cc -o web/symbulation.js
Assertion failed: (result && "no existing substitution for template name"), function mangleExistingSubstitution, file /b/s/w/ir/cache/builder/emscripten-releases/emscripten-fastcomp-clang/lib/AST/ItaniumMangle.cpp, line 4456.
0  libLLVM.dylib            0x0000000108a0a938 llvm::sys::PrintStackTrace(llvm::raw_ostream&) + 40
1  libLLVM.dylib            0x0000000108a0afa6 SignalHandler(int) + 486
2  libsystem_platform.dylib 0x00007fff6909c5fd _sigtramp + 29
3  libsystem_platform.dylib 0x0000000000003460 _sigtramp + 2532732544
4  libsystem_c.dylib        0x00007fff68f72808 abort + 120
5  libsystem_c.dylib        0x00007fff68f71ac6 err + 0
6  clang-6.0                0x00000001080b696f (anonymous namespace)::CXXNameMangler::mangleUnresolvedTypeOrSimpleId(clang::QualType, llvm::StringRef) + 1647
7  clang-6.0                0x00000001080b5f98 (anonymous namespace)::CXXNameMangler::mangleUnresolvedPrefix(clang::NestedNameSpecifier*, bool) + 152
8  clang-6.0                0x00000001080b6a6d (anonymous namespace)::CXXNameMangler::mangleUnresolvedName(clang::NestedNameSpecifier*, clang::DeclarationName, clang::TemplateArgumentLoc const*, unsigned int, unsigned int) + 45
9  clang-6.0                0x00000001080b8226 (anonymous namespace)::CXXNameMangler::mangleTemplateArg(clang::TemplateArgument) + 950
10 clang-6.0                0x00000001080bce3a (anonymous namespace)::CXXNameMangler::manglePrefix(clang::NestedNameSpecifier*) + 762
11 clang-6.0                0x00000001080ae671 (anonymous namespace)::CXXNameMangler::mangleType(clang::QualType) + 5729
12 clang-6.0                0x00000001080ba097 (anonymous namespace)::CXXNameMangler::mangleBareFunctionType(clang::FunctionProtoType const*, bool, clang::FunctionDecl const*) + 391
13 clang-6.0                0x00000001080aaf67 (anonymous namespace)::CXXNameMangler::mangleFunctionEncoding(clang::FunctionDecl const*) + 135
14 clang-6.0                0x00000001080a7dc7 (anonymous namespace)::ItaniumMangleContextImpl::mangleCXXName(clang::NamedDecl const*, llvm::raw_ostream&) + 487
15 clang-6.0                0x0000000106d7d999 clang::CodeGen::CodeGenModule::getMangledName(clang::GlobalDecl) + 969
16 clang-6.0                0x0000000106d89b5f clang::CodeGen::CodeGenModule::EmitGlobal(clang::GlobalDecl) + 2719
17 clang-6.0                0x0000000106d8e2f4 clang::CodeGen::CodeGenModule::EmitTopLevelDecl(clang::Decl*) + 148
18 clang-6.0                0x0000000106e15e6f (anonymous namespace)::CodeGeneratorImpl::HandleTopLevelDecl(clang::DeclGroupRef) + 335
19 clang-6.0                0x0000000106d6b1da clang::BackendConsumer::HandleTopLevelDecl(clang::DeclGroupRef) + 186
20 clang-6.0                0x0000000107b32308 clang::Sema::InstantiateFunctionDefinition(clang::SourceLocation, clang::FunctionDecl*, bool, bool, bool) + 3160
21 clang-6.0                0x0000000107808d4b clang::Sema::MarkFunctionReferenced(clang::SourceLocation, clang::FunctionDecl*, bool) + 1915
22 clang-6.0                0x000000010780cc1b MarkExprReferenced(clang::Sema&, clang::SourceLocation, clang::Decl*, clang::Expr*, bool) + 107
23 clang-6.0                0x00000001079d9fbd clang::Sema::FixOverloadedFunctionReference(clang::Expr*, clang::DeclAccessPair, clang::FunctionDecl*) + 2237
24 clang-6.0                0x00000001079dbe93 FinishOverloadedCallExpr(clang::Sema&, clang::Scope*, clang::Expr*, clang::UnresolvedLookupExpr*, clang::SourceLocation, llvm::MutableArrayRef<clang::Expr*>, clang::SourceLocation, clang::Expr*, clang::OverloadCandidateSet*, clang::OverloadCandidate**, clang::OverloadingResult, bool) + 179
25 clang-6.0                0x00000001079dbda1 clang::Sema::BuildOverloadedCallExpr(clang::Scope*, clang::Expr*, clang::UnresolvedLookupExpr*, clang::SourceLocation, llvm::MutableArrayRef<clang::Expr*>, clang::SourceLocation, clang::Expr*, bool, bool) + 561
26 clang-6.0                0x00000001077c5016 clang::Sema::ActOnCallExpr(clang::Scope*, clang::Expr*, clang::SourceLocation, llvm::MutableArrayRef<clang::Expr*>, clang::SourceLocation, clang::Expr*, bool) + 1350
27 clang-6.0                0x000000010730c5f7 clang::Parser::ParsePostfixExpressionSuffix(clang::ActionResult<clang::Expr*, true>) + 4247
28 clang-6.0                0x00000001073117f9 clang::Parser::ParseCastExpression(bool, bool, bool&, clang::Parser::TypeCastState, bool) + 17801
29 clang-6.0                0x000000010730a052 clang::Parser::ParseAssignmentExpression(clang::Parser::TypeCastState) + 162
30 clang-6.0                0x0000000107309f8e clang::Parser::ParseExpression(clang::Parser::TypeCastState) + 14
31 clang-6.0                0x0000000107323879 clang::Parser::ParseCXXCondition(clang::ActionResult<clang::Stmt*, true>*, clang::SourceLocation, clang::Sema::ConditionKind) + 409
32 clang-6.0                0x000000010735d7e8 clang::Parser::ParseParenExprOrCondition(clang::ActionResult<clang::Stmt*, true>*, clang::Sema::ConditionResult&, clang::SourceLocation, clang::Sema::ConditionKind) + 376
33 clang-6.0                0x0000000107359317 clang::Parser::ParseWhileStatement(clang::SourceLocation*) + 167
34 clang-6.0                0x000000010735629a clang::Parser::ParseStatementOrDeclarationAfterAttributes(llvm::SmallVector<clang::Stmt*, 32u>&, clang::Parser::AllowedConstructsKind, clang::SourceLocation*, clang::Parser::ParsedAttributesWithRange&) + 3018
35 clang-6.0                0x00000001073555ea clang::Parser::ParseStatementOrDeclaration(llvm::SmallVector<clang::Stmt*, 32u>&, clang::Parser::AllowedConstructsKind, clang::SourceLocation*) + 266
36 clang-6.0                0x000000010735d277 clang::Parser::ParseCompoundStatementBody(bool) + 1687
37 clang-6.0                0x000000010735dc47 clang::Parser::ParseFunctionStatementBody(clang::Decl*, clang::Parser::ParseScope&) + 167
38 clang-6.0                0x0000000107375625 clang::Parser::ParseFunctionDefinition(clang::ParsingDeclarator&, clang::Parser::ParsedTemplateInfo const&, clang::Parser::LateParsedAttrList*) + 2181
39 clang-6.0                0x0000000107365607 clang::Parser::ParseSingleDeclarationAfterTemplate(clang::DeclaratorContext, clang::Parser::ParsedTemplateInfo const&, clang::ParsingDeclRAIIObject&, clang::SourceLocation&, clang::AccessSpecifier, clang::AttributeList*) + 4711
40 clang-6.0                0x0000000107364151 clang::Parser::ParseTemplateDeclarationOrSpecialization(clang::DeclaratorContext, clang::SourceLocation&, clang::AccessSpecifier, clang::AttributeList*) + 1521
41 clang-6.0                0x000000010736398f clang::Parser::ParseDeclarationStartingWithTemplate(clang::DeclaratorContext, clang::SourceLocation&, clang::AccessSpecifier, clang::AttributeList*) + 335
42 clang-6.0                0x00000001072db50e clang::Parser::ParseDeclaration(clang::DeclaratorContext, clang::SourceLocation&, clang::Parser::ParsedAttributesWithRange&) + 350
43 clang-6.0                0x0000000107372200 clang::Parser::ParseExternalDeclaration(clang::Parser::ParsedAttributesWithRange&, clang::ParsingDeclSpec*) + 176
44 clang-6.0                0x00000001072f5f63 clang::Parser::ParseInnerNamespace(std::__1::vector<clang::SourceLocation, std::__1::allocator<clang::SourceLocation> >&, std::__1::vector<clang::IdentifierInfo*, std::__1::allocator<clang::IdentifierInfo*> >&, std::__1::vector<clang::SourceLocation, std::__1::allocator<clang::SourceLocation> >&, unsigned int, clang::SourceLocation&, clang::ParsedAttributes&, clang::BalancedDelimiterTracker&) + 195
45 clang-6.0                0x00000001072f583a clang::Parser::ParseNamespace(clang::DeclaratorContext, clang::SourceLocation&, clang::SourceLocation) + 5818
46 clang-6.0                0x00000001072db57f clang::Parser::ParseDeclaration(clang::DeclaratorContext, clang::SourceLocation&, clang::Parser::ParsedAttributesWithRange&) + 463
47 clang-6.0                0x0000000107372200 clang::Parser::ParseExternalDeclaration(clang::Parser::ParsedAttributesWithRange&, clang::ParsingDeclSpec*) + 176
48 clang-6.0                0x0000000107371ab1 clang::Parser::ParseTopLevelDecl(clang::OpaquePtr<clang::DeclGroupRef>&) + 705
49 clang-6.0                0x00000001072cb5ab clang::ParseAST(clang::Sema&, bool, bool) + 379
50 clang-6.0                0x000000010700cc1a clang::FrontendAction::Execute() + 138
51 clang-6.0                0x0000000106fab4ca clang::CompilerInstance::ExecuteAction(clang::FrontendAction&) + 1386
52 clang-6.0                0x000000010705d612 clang::ExecuteCompilerInvocation(clang::CompilerInstance*) + 4114
53 clang-6.0                0x0000000106ac58db cc1_main(llvm::ArrayRef<char const*>, char const*, void*) + 1323
54 clang-6.0                0x0000000106ac381a main + 11914
55 libdyld.dylib            0x00007fff68ea3cc9 start + 1
Stack dump:
0.      Program arguments: /Users/yiqin/Desktop/WAVES Workshop/Symbiosis/emsdk/fastcomp/fastcomp/bin/clang-6.0 -cc1 -triple asmjs-unknown-emscripten -emit-llvm-bc -emit-llvm-uselists -disable-free -main-file-name symbulation-web.cc -mrelocation-model static -mthread-model posix -mdisable-fp-elim -no-integrated-as -mconstructor-aliases -dwarf-column-info -debugger-tuning=gdb -target-linker-version 409.12 -coverage-notes-file /var/folders/lt/tmf4x6nj0kv4jpq3dchpnzkw0000gn/T/emscripten_temp_9s456fgi/symbulation-web_0.gcno -resource-dir /Users/yiqin/Desktop/WAVES Workshop/Symbiosis/emsdk/fastcomp/fastcomp/lib/clang/6.0.1 -D __EMSCRIPTEN_major__=1 -D __EMSCRIPTEN_minor__=38 -D __EMSCRIPTEN_tiny__=48 -D _LIBCPP_ABI_VERSION=2 -I ../Empirical/source/ -D NDEBUG -D EMSCRIPTEN -Oz -Werror=implicit-function-declaration -Wall -Wno-unused-function -std=c++17 -fdeprecated-macro -fno-dwarf-directory-asm -fdebug-compilation-dir /Users/yiqin/Desktop/WAVES Workshop/Symbiosis/SymbulationEmp -ferror-limit 19 -fmessage-length 133 -fno-inline-functions -fobjc-runtime=gnustep -fcxx-exceptions -fexceptions -fdiagnostics-show-option -fcolor-diagnostics -vectorize-slp -nostdsysteminc -isystem/Users/yiqin/Desktop/WAVES Workshop/Symbiosis/emsdk/fastcomp/emscripten/system/include/libcxx -isystem/Users/yiqin/Desktop/WAVES Workshop/Symbiosis/emsdk/fastcomp/emscripten/system/lib/libcxxabi/include -isystem/Users/yiqin/Desktop/WAVES Workshop/Symbiosis/emsdk/fastcomp/emscripten/system/include/compat -isystem/Users/yiqin/Desktop/WAVES Workshop/Symbiosis/emsdk/fastcomp/emscripten/system/include -isystem/Users/yiqin/Desktop/WAVES Workshop/Symbiosis/emsdk/fastcomp/emscripten/system/include/libc -isystem/Users/yiqin/Desktop/WAVES Workshop/Symbiosis/emsdk/fastcomp/emscripten/system/lib/libc/musl/arch/emscripten -isystem/Users/yiqin/Desktop/WAVES Workshop/Symbiosis/emsdk/fastcomp/emscripten/system/local/include -disable-O0-optnone -isystem/Users/yiqin/Desktop/WAVES Workshop/Symbiosis/emsdk/fastcomp/emscripten/system/include/SDL -disable-llvm-optzns -o /var/folders/lt/tmf4x6nj0kv4jpq3dchpnzkw0000gn/T/emscripten_temp_9s456fgi/symbulation-web_0.o -x c++ source/web/symbulation-web.cc 
1.      source/web/../../../Empirical/source/Evolve/World_structure.h:230:40: current parser token ')'
2.      source/web/../../../Empirical/source/Evolve/World_structure.h:23:1: parsing namespace 'emp'
3.      source/web/../../../Empirical/source/Evolve/World_structure.h:218:63: parsing function body 'emp::SetMapElites'
4.      source/web/../../../Empirical/source/Evolve/World_structure.h:218:63: in compound statement ('{}')
5.      source/web/../../../Empirical/source/Evolve/../tools/math.h:219:49: instantiating function definition 'emp::Pow<unsigned long>'
6.      source/web/../../../Empirical/source/Evolve/../tools/math.h:219:49: LLVM IR generation of declaration 'emp::Pow'
7.      source/web/../../../Empirical/source/Evolve/../tools/math.h:219:49: Mangling declaration 'emp::Pow'
clang-6.0: error: unable to execute command: Abort trap: 6
clang-6.0: error: clang frontend command failed due to signal (use -v to see invocation)
clang version 6.0.1 (/b/s/w/ir/cache/git/chromium.googlesource.com-external-github.com-emscripten--core-emscripten--fastcomp--clang 98df4be387dde3e3918fa5bbb5fc43e1a0e1daac) (/b/s/w/ir/cache/git/chromium.googlesource.com-external-github.com-emscripten--core-emscripten--fastcomp 6c7e775325067e33fa60611e619a8b987b6d0c35) (emscripten 1.38.31 : 1.38.31)
Target: asmjs-unknown-emscripten
Thread model: posix
InstalledDir: /Users/yiqin/Desktop/WAVES Workshop/Symbiosis/emsdk/fastcomp/fastcomp/bin
clang-6.0: note: diagnostic msg: PLEASE submit a bug report to http://llvm.org/bugs/ and include the crash backtrace, preprocessed source, and associated run script.
clang-6.0: note: diagnostic msg: 
********************

PLEASE ATTACH THE FOLLOWING FILES TO THE BUG REPORT:
Preprocessed source(s) and associated run script(s) are located at:
clang-6.0: note: diagnostic msg: /var/folders/lt/tmf4x6nj0kv4jpq3dchpnzkw0000gn/T/symbulation-web-9616db.cpp
clang-6.0: note: diagnostic msg: /var/folders/lt/tmf4x6nj0kv4jpq3dchpnzkw0000gn/T/symbulation-web-9616db.sh
clang-6.0: note: diagnostic msg: Crash backtrace is located in
clang-6.0: note: diagnostic msg: /Users/yiqin/Library/Logs/DiagnosticReports/clang-6.0_<YYYY-MM-DD-HHMMSS>_<hostname>.crash
clang-6.0: note: diagnostic msg: (choose the .crash file that corresponds to your crash)
Yis-MacBook:SymbulationEmp yiqin$ make web
emcc -Wall -Wno-unused-function -std=c++17 -I../Empirical/source/ -Oz -DNDEBUG -s "EXTRA_EXPORTED_RUNTIME_METHODS=['ccall', 'cwrap']" -s TOTAL_MEMORY=67108864 --js-library ../Empirical/source/web/library_emp.js -s EXPORTED_FUNCTIONS="['_main', '_empCppCallback']" -s DISABLE_EXCEPTION_CATCHING=1 -s NO_EXIT_RUNTIME=1  source/web/symbulation-web.cc -o web/symbulation.js
Assertion failed: (result && "no existing substitution for template name"), function mangleExistingSubstitution, file /b/s/w/ir/cache/builder/emscripten-releases/emscripten-fastcomp-clang/lib/AST/ItaniumMangle.cpp, line 4456.
0  libLLVM.dylib            0x000000010342f938 llvm::sys::PrintStackTrace(llvm::raw_ostream&) + 40
1  libLLVM.dylib            0x000000010342ffa6 SignalHandler(int) + 486
2  libsystem_platform.dylib 0x00007fff6909c5fd _sigtramp + 29
3  libsystem_platform.dylib 0x0000000000003460 _sigtramp + 2532732544
4  libsystem_c.dylib        0x00007fff68f72808 abort + 120
5  libsystem_c.dylib        0x00007fff68f71ac6 err + 0
6  clang-6.0                0x0000000102ada96f (anonymous namespace)::CXXNameMangler::mangleUnresolvedTypeOrSimpleId(clang::QualType, llvm::StringRef) + 1647
7  clang-6.0                0x0000000102ad9f98 (anonymous namespace)::CXXNameMangler::mangleUnresolvedPrefix(clang::NestedNameSpecifier*, bool) + 152
8  clang-6.0                0x0000000102adaa6d (anonymous namespace)::CXXNameMangler::mangleUnresolvedName(clang::NestedNameSpecifier*, clang::DeclarationName, clang::TemplateArgumentLoc const*, unsigned int, unsigned int) + 45
9  clang-6.0                0x0000000102adc226 (anonymous namespace)::CXXNameMangler::mangleTemplateArg(clang::TemplateArgument) + 950
10 clang-6.0                0x0000000102ae0e3a (anonymous namespace)::CXXNameMangler::manglePrefix(clang::NestedNameSpecifier*) + 762
11 clang-6.0                0x0000000102ad2671 (anonymous namespace)::CXXNameMangler::mangleType(clang::QualType) + 5729
12 clang-6.0                0x0000000102ade097 (anonymous namespace)::CXXNameMangler::mangleBareFunctionType(clang::FunctionProtoType const*, bool, clang::FunctionDecl const*) + 391
13 clang-6.0                0x0000000102acef67 (anonymous namespace)::CXXNameMangler::mangleFunctionEncoding(clang::FunctionDecl const*) + 135
14 clang-6.0                0x0000000102acbdc7 (anonymous namespace)::ItaniumMangleContextImpl::mangleCXXName(clang::NamedDecl const*, llvm::raw_ostream&) + 487
15 clang-6.0                0x00000001017a1999 clang::CodeGen::CodeGenModule::getMangledName(clang::GlobalDecl) + 969
16 clang-6.0                0x00000001017adb5f clang::CodeGen::CodeGenModule::EmitGlobal(clang::GlobalDecl) + 2719
17 clang-6.0                0x00000001017b22f4 clang::CodeGen::CodeGenModule::EmitTopLevelDecl(clang::Decl*) + 148
18 clang-6.0                0x0000000101839e6f (anonymous namespace)::CodeGeneratorImpl::HandleTopLevelDecl(clang::DeclGroupRef) + 335
19 clang-6.0                0x000000010178f1da clang::BackendConsumer::HandleTopLevelDecl(clang::DeclGroupRef) + 186
20 clang-6.0                0x0000000102556308 clang::Sema::InstantiateFunctionDefinition(clang::SourceLocation, clang::FunctionDecl*, bool, bool, bool) + 3160
21 clang-6.0                0x000000010222cd4b clang::Sema::MarkFunctionReferenced(clang::SourceLocation, clang::FunctionDecl*, bool) + 1915
22 clang-6.0                0x0000000102230c1b MarkExprReferenced(clang::Sema&, clang::SourceLocation, clang::Decl*, clang::Expr*, bool) + 107
23 clang-6.0                0x00000001023fdfbd clang::Sema::FixOverloadedFunctionReference(clang::Expr*, clang::DeclAccessPair, clang::FunctionDecl*) + 2237
24 clang-6.0                0x00000001023ffe93 FinishOverloadedCallExpr(clang::Sema&, clang::Scope*, clang::Expr*, clang::UnresolvedLookupExpr*, clang::SourceLocation, llvm::MutableArrayRef<clang::Expr*>, clang::SourceLocation, clang::Expr*, clang::OverloadCandidateSet*, clang::OverloadCandidate**, clang::OverloadingResult, bool) + 179
25 clang-6.0                0x00000001023ffda1 clang::Sema::BuildOverloadedCallExpr(clang::Scope*, clang::Expr*, clang::UnresolvedLookupExpr*, clang::SourceLocation, llvm::MutableArrayRef<clang::Expr*>, clang::SourceLocation, clang::Expr*, bool, bool) + 561
26 clang-6.0                0x00000001021e9016 clang::Sema::ActOnCallExpr(clang::Scope*, clang::Expr*, clang::SourceLocation, llvm::MutableArrayRef<clang::Expr*>, clang::SourceLocation, clang::Expr*, bool) + 1350
27 clang-6.0                0x0000000101d305f7 clang::Parser::ParsePostfixExpressionSuffix(clang::ActionResult<clang::Expr*, true>) + 4247
28 clang-6.0                0x0000000101d357f9 clang::Parser::ParseCastExpression(bool, bool, bool&, clang::Parser::TypeCastState, bool) + 17801
29 clang-6.0                0x0000000101d2e052 clang::Parser::ParseAssignmentExpression(clang::Parser::TypeCastState) + 162
30 clang-6.0                0x0000000101d2df8e clang::Parser::ParseExpression(clang::Parser::TypeCastState) + 14
31 clang-6.0                0x0000000101d47879 clang::Parser::ParseCXXCondition(clang::ActionResult<clang::Stmt*, true>*, clang::SourceLocation, clang::Sema::ConditionKind) + 409
32 clang-6.0                0x0000000101d817e8 clang::Parser::ParseParenExprOrCondition(clang::ActionResult<clang::Stmt*, true>*, clang::Sema::ConditionResult&, clang::SourceLocation, clang::Sema::ConditionKind) + 376
33 clang-6.0                0x0000000101d7d317 clang::Parser::ParseWhileStatement(clang::SourceLocation*) + 167
34 clang-6.0                0x0000000101d7a29a clang::Parser::ParseStatementOrDeclarationAfterAttributes(llvm::SmallVector<clang::Stmt*, 32u>&, clang::Parser::AllowedConstructsKind, clang::SourceLocation*, clang::Parser::ParsedAttributesWithRange&) + 3018
35 clang-6.0                0x0000000101d795ea clang::Parser::ParseStatementOrDeclaration(llvm::SmallVector<clang::Stmt*, 32u>&, clang::Parser::AllowedConstructsKind, clang::SourceLocation*) + 266
36 clang-6.0                0x0000000101d81277 clang::Parser::ParseCompoundStatementBody(bool) + 1687
37 clang-6.0                0x0000000101d81c47 clang::Parser::ParseFunctionStatementBody(clang::Decl*, clang::Parser::ParseScope&) + 167
38 clang-6.0                0x0000000101d99625 clang::Parser::ParseFunctionDefinition(clang::ParsingDeclarator&, clang::Parser::ParsedTemplateInfo const&, clang::Parser::LateParsedAttrList*) + 2181
39 clang-6.0                0x0000000101d89607 clang::Parser::ParseSingleDeclarationAfterTemplate(clang::DeclaratorContext, clang::Parser::ParsedTemplateInfo const&, clang::ParsingDeclRAIIObject&, clang::SourceLocation&, clang::AccessSpecifier, clang::AttributeList*) + 4711
40 clang-6.0                0x0000000101d88151 clang::Parser::ParseTemplateDeclarationOrSpecialization(clang::DeclaratorContext, clang::SourceLocation&, clang::AccessSpecifier, clang::AttributeList*) + 1521
41 clang-6.0                0x0000000101d8798f clang::Parser::ParseDeclarationStartingWithTemplate(clang::DeclaratorContext, clang::SourceLocation&, clang::AccessSpecifier, clang::AttributeList*) + 335
42 clang-6.0                0x0000000101cff50e clang::Parser::ParseDeclaration(clang::DeclaratorContext, clang::SourceLocation&, clang::Parser::ParsedAttributesWithRange&) + 350
43 clang-6.0                0x0000000101d96200 clang::Parser::ParseExternalDeclaration(clang::Parser::ParsedAttributesWithRange&, clang::ParsingDeclSpec*) + 176
44 clang-6.0                0x0000000101d19f63 clang::Parser::ParseInnerNamespace(std::__1::vector<clang::SourceLocation, std::__1::allocator<clang::SourceLocation> >&, std::__1::vector<clang::IdentifierInfo*, std::__1::allocator<clang::IdentifierInfo*> >&, std::__1::vector<clang::SourceLocation, std::__1::allocator<clang::SourceLocation> >&, unsigned int, clang::SourceLocation&, clang::ParsedAttributes&, clang::BalancedDelimiterTracker&) + 195
45 clang-6.0                0x0000000101d1983a clang::Parser::ParseNamespace(clang::DeclaratorContext, clang::SourceLocation&, clang::SourceLocation) + 5818
46 clang-6.0                0x0000000101cff57f clang::Parser::ParseDeclaration(clang::DeclaratorContext, clang::SourceLocation&, clang::Parser::ParsedAttributesWithRange&) + 463
47 clang-6.0                0x0000000101d96200 clang::Parser::ParseExternalDeclaration(clang::Parser::ParsedAttributesWithRange&, clang::ParsingDeclSpec*) + 176
48 clang-6.0                0x0000000101d95ab1 clang::Parser::ParseTopLevelDecl(clang::OpaquePtr<clang::DeclGroupRef>&) + 705
49 clang-6.0                0x0000000101cef5ab clang::ParseAST(clang::Sema&, bool, bool) + 379
50 clang-6.0                0x0000000101a30c1a clang::FrontendAction::Execute() + 138
51 clang-6.0                0x00000001019cf4ca clang::CompilerInstance::ExecuteAction(clang::FrontendAction&) + 1386
52 clang-6.0                0x0000000101a81612 clang::ExecuteCompilerInvocation(clang::CompilerInstance*) + 4114
53 clang-6.0                0x00000001014e98db cc1_main(llvm::ArrayRef<char const*>, char const*, void*) + 1323
54 clang-6.0                0x00000001014e781a main + 11914
55 libdyld.dylib            0x00007fff68ea3cc9 start + 1
Stack dump:
0.      Program arguments: /Users/yiqin/Desktop/WAVES Workshop/Symbiosis/emsdk/fastcomp/fastcomp/bin/clang-6.0 -cc1 -triple asmjs-unknown-emscripten -emit-llvm-bc -emit-llvm-uselists -disable-free -main-file-name symbulation-web.cc -mrelocation-model static -mthread-model posix -mdisable-fp-elim -no-integrated-as -mconstructor-aliases -dwarf-column-info -debugger-tuning=gdb -target-linker-version 409.12 -coverage-notes-file /var/folders/lt/tmf4x6nj0kv4jpq3dchpnzkw0000gn/T/emscripten_temp_v2i3u1mu/symbulation-web_0.gcno -resource-dir /Users/yiqin/Desktop/WAVES Workshop/Symbiosis/emsdk/fastcomp/fastcomp/lib/clang/6.0.1 -D __EMSCRIPTEN_major__=1 -D __EMSCRIPTEN_minor__=38 -D __EMSCRIPTEN_tiny__=48 -D _LIBCPP_ABI_VERSION=2 -I ../Empirical/source/ -D NDEBUG -D EMSCRIPTEN -Oz -Werror=implicit-function-declaration -Wall -Wno-unused-function -std=c++17 -fdeprecated-macro -fno-dwarf-directory-asm -fdebug-compilation-dir /Users/yiqin/Desktop/WAVES Workshop/Symbiosis/SymbulationEmp -ferror-limit 19 -fmessage-length 133 -fno-inline-functions -fobjc-runtime=gnustep -fcxx-exceptions -fexceptions -fdiagnostics-show-option -fcolor-diagnostics -vectorize-slp -nostdsysteminc -isystem/Users/yiqin/Desktop/WAVES Workshop/Symbiosis/emsdk/fastcomp/emscripten/system/include/libcxx -isystem/Users/yiqin/Desktop/WAVES Workshop/Symbiosis/emsdk/fastcomp/emscripten/system/lib/libcxxabi/include -isystem/Users/yiqin/Desktop/WAVES Workshop/Symbiosis/emsdk/fastcomp/emscripten/system/include/compat -isystem/Users/yiqin/Desktop/WAVES Workshop/Symbiosis/emsdk/fastcomp/emscripten/system/include -isystem/Users/yiqin/Desktop/WAVES Workshop/Symbiosis/emsdk/fastcomp/emscripten/system/include/libc -isystem/Users/yiqin/Desktop/WAVES Workshop/Symbiosis/emsdk/fastcomp/emscripten/system/lib/libc/musl/arch/emscripten -isystem/Users/yiqin/Desktop/WAVES Workshop/Symbiosis/emsdk/fastcomp/emscripten/system/local/include -disable-O0-optnone -isystem/Users/yiqin/Desktop/WAVES Workshop/Symbiosis/emsdk/fastcomp/emscripten/system/include/SDL -disable-llvm-optzns -o /var/folders/lt/tmf4x6nj0kv4jpq3dchpnzkw0000gn/T/emscripten_temp_v2i3u1mu/symbulation-web_0.o -x c++ source/web/symbulation-web.cc 
1.      source/web/../../../Empirical/source/Evolve/World_structure.h:230:40: current parser token ')'
2.      source/web/../../../Empirical/source/Evolve/World_structure.h:23:1: parsing namespace 'emp'
3.      source/web/../../../Empirical/source/Evolve/World_structure.h:218:63: parsing function body 'emp::SetMapElites'
4.      source/web/../../../Empirical/source/Evolve/World_structure.h:218:63: in compound statement ('{}')
5.      source/web/../../../Empirical/source/Evolve/../tools/math.h:219:49: instantiating function definition 'emp::Pow<unsigned long>'
6.      source/web/../../../Empirical/source/Evolve/../tools/math.h:219:49: LLVM IR generation of declaration 'emp::Pow'
7.      source/web/../../../Empirical/source/Evolve/../tools/math.h:219:49: Mangling declaration 'emp::Pow'
clang-6.0: error: unable to execute command: Abort trap: 6
clang-6.0: error: clang frontend command failed due to signal (use -v to see invocation)
clang version 6.0.1 (/b/s/w/ir/cache/git/chromium.googlesource.com-external-github.com-emscripten--core-emscripten--fastcomp--clang 98df4be387dde3e3918fa5bbb5fc43e1a0e1daac) (/b/s/w/ir/cache/git/chromium.googlesource.com-external-github.com-emscripten--core-emscripten--fastcomp 6c7e775325067e33fa60611e619a8b987b6d0c35) (emscripten 1.38.31 : 1.38.31)
Target: asmjs-unknown-emscripten
Thread model: posix
InstalledDir: /Users/yiqin/Desktop/WAVES Workshop/Symbiosis/emsdk/fastcomp/fastcomp/bin
clang-6.0: note: diagnostic msg: PLEASE submit a bug report to http://llvm.org/bugs/ and include the crash backtrace, preprocessed source, and associated run script.
clang-6.0: note: diagnostic msg: 
********************

PLEASE ATTACH THE FOLLOWING FILES TO THE BUG REPORT:
Preprocessed source(s) and associated run script(s) are located at:
clang-6.0: note: diagnostic msg: /var/folders/lt/tmf4x6nj0kv4jpq3dchpnzkw0000gn/T/symbulation-web-d12618.cpp
clang-6.0: note: diagnostic msg: /var/folders/lt/tmf4x6nj0kv4jpq3dchpnzkw0000gn/T/symbulation-web-d12618.sh
clang-6.0: note: diagnostic msg: Crash backtrace is located in
clang-6.0: note: diagnostic msg: /Users/yiqin/Library/Logs/DiagnosticReports/clang-6.0_<YYYY-MM-DD-HHMMSS>_<hostname>.crash
clang-6.0: note: diagnostic msg: (choose the .crash file that corresponds to your crash)
clang-6.0: note: diagnostic msg: 

********************
shared:ERROR: '/Users/yiqin/Desktop/WAVES Workshop/Symbiosis/emsdk/fastcomp/fastcomp/bin/clang++ -target asmjs-unknown-emscripten -D__EMSCRIPTEN_major__=1 -D__EMSCRIPTEN_minor__=38 -D__EMSCRIPTEN_tiny__=48 -D_LIBCPP_ABI_VERSION=2 -Werror=implicit-function-declaration -Xclang -nostdsysteminc -Xclang -isystem/Users/yiqin/Desktop/WAVES Workshop/Symbiosis/emsdk/fastcomp/emscripten/system/include/libcxx -Xclang -isystem/Users/yiqin/Desktop/WAVES Workshop/Symbiosis/emsdk/fastcomp/emscripten/system/lib/libcxxabi/include -Xclang -isystem/Users/yiqin/Desktop/WAVES Workshop/Symbiosis/emsdk/fastcomp/emscripten/system/include/compat -Xclang -isystem/Users/yiqin/Desktop/WAVES Workshop/Symbiosis/emsdk/fastcomp/emscripten/system/include -Xclang -isystem/Users/yiqin/Desktop/WAVES Workshop/Symbiosis/emsdk/fastcomp/emscripten/system/include/libc -Xclang -isystem/Users/yiqin/Desktop/WAVES Workshop/Symbiosis/emsdk/fastcomp/emscripten/system/lib/libc/musl/arch/emscripten -Xclang -isystem/Users/yiqin/Desktop/WAVES Workshop/Symbiosis/emsdk/fastcomp/emscripten/system/local/include -Wall -Wno-unused-function -std=c++17 -I../Empirical/source/ -Oz -DNDEBUG -DEMSCRIPTEN -mllvm -disable-llvm-optzns source/web/symbulation-web.cc -fno-inline-functions -Xclang -disable-O0-optnone -Xclang -isystem/Users/yiqin/Desktop/WAVES Workshop/Symbiosis/emsdk/fastcomp/emscripten/system/include/SDL -c -o /var/folders/lt/tmf4x6nj0kv4jpq3dchpnzkw0000gn/T/emscripten_temp_v2i3u1mu/symbulation-web_0.o -emit-llvm' failed (254)
make: *** [symbulation.js] Error 1